#!/usr/bin/env ruby

# Initial instructions for player
tokens = ["X", "O"]
board = [1, 2, 3, 4, 5, 6, 7, 8, 9]

puts 'Welcome to tic-tac-toe. Do you know how to play it? (yes/no)'
HowTo = gets.chomp.downcase

if HowTo == 'yes'
  puts "Ok, let's start the game!"
else
  puts 'No problem, below are the tips to understand how to play the game:'
  puts 'In order to win the game, a player must place three of their marks in a horizontal, vertical or diagonal row.'
  puts "Are you ready? Let's start the game!"
end

# Naming players
puts 'Please enter your name player1'
$player1 = gets.chomp.capitalize
puts "Welcome #{$player1}"
puts 'Please enter your name player2'
$player2 = gets.chomp.capitalize
puts "Welcome #{$player2}"

# Assigning token to players
def user_tokens(tokens)
  puts "#{$player1} choose your destiny token X or O"
  player1_token = gets.chomp.upcase
  if player1_token == tokens[0]
    (puts "#{$player1} will use #{tokens[0]} and #{$player2} will use #{tokens[1]}")
  elsif player1_token == tokens[1]
    (puts "#{$player1} will use #{tokens[1]} and #{$player2} will use #{tokens[0]}")
  else
    puts 'Invalid token'
  end
end

puts "#{$player1} and #{$player2} Welcome to the game!"

def display_board(board)
  puts 'Tic tac toe board: '
  puts " #{board[0]} | #{board[1]} | #{board[2]} "
  puts '-----------'
  puts " #{board[3]} | #{board[4]} | #{board[5]} "
  puts '-----------'
  puts " #{board[6]} | #{board[7]} | #{board[8]} "
end

def player_move(board)
  puts 'Choose a number between 1 and 9...'
  counter = 0
  while counter <= 8
    puts "#{$player1} is your turn"
    move = gets.chomp.to_i
    display_board(board)
    if move > 9
      puts 'You chose an invalid number, please choose again ...'
      counter -= 1
    else
      counter += 1
      puts "#{$player2} is your turn"
      move = gets.chomp.to_i
      if move > 9
        puts 'You chose an invalid number, please choose again ...'
        counter -= 1
      else
        counter += 1
        display_board(board)
      end
    end
  end
  puts "-------------------------------------"
  puts "-------------------------------------"
  puts "game over! Do you want to play again?"
  puts "-------------------------------------"
  puts "-------------------------------------"
end

user_tokens(tokens)
display_board(board)
player_move(board)






# class TicTacToe
#   def initialize(board=nil)
#     @board = Array.new(9, " ")
#   end
# WIN_COMBINATIONS = [
#   [0,1,2],
#   [3,4,5],
#   [6,7,8],
#   [0,3,6],
#   [1,4,7],
#   [2,5,8],
#   [0,4,8],
#   [2,4,6]
# ]
# def display_board
#   puts " #{board[0]} | #{board[1]} | #{board[2]} "
#   puts "----------"
#   puts " #{board[3]} | #{board[4]} | #{board[5]} "
#   puts "----------"
#   puts " #{board[6]} | #{board[7]} | #{board[8]} "
#   puts "----------"

#   def input_to_index(user_input)
#     user_input.to_i - 1
#   end

#   def move(index, token)
#     @board[index] = token
#   end

#   def position_taken?(index)
#     @board[index] != " "
#   end

#   def valid_move?(index)
#     !position_taken?(index) && index.between?(0,8)
#   end
#   
#   def turn_count
#     count = 0
#     @board.each do |i|
#       count += 1 if i == 'X' || i == 'O'
#     end
#     count
#   end

#   def current_player
#     turn_count % 2 == 0 ? 'X' : 'O'
#   end

#   def turn
#     puts "Please enter a number (1-9):"
#     user_input = gets.strip
#     index = input_to_index(user_input)
#     if valid_move?(index)
#       token = current_player
#       move(index, token)
#     else
#       turn
#     end
#     display_board
#   end

#   def won?
#     WIN_COMBINATIONS.any? do |combo|
#       if position_taken?(combo[0]) && @board[combo[0]] == @board[combo[1]] && @board[combo[1]] == @board[combo[2]]
#         return combo
#       end
#     end
#   end

#   def full?
#     @board.all?{|square| square != " " }
#   end

#   def draw?
#     full? && !won?
#   end

#   def over?
#     won? || draw?
#   end

#   def winner
#     if combo = won?
#       @board[combo[0]]
#     end
#   end

#   def play
#     turn until over?
#     puts winner ? "Congratulations #{winner}!" : "Cat's Game!"
#   end
# end

# end

# TicTacToe.play